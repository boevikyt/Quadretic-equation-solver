#include <cstdio>  
#include <cmath>   
#include <stdexcept>

class QuadraticEquationSolver {
private:
    double a, b, c;
    double discriminant;

public:
    QuadraticEquationSolver(double a, double b, double c) : a(a), b(b), c(c) {
        if (a == 0.0) {
            throw std::invalid_argument("Коэффициент 'a' не может быть нулевым.");
        }
        discriminant = b * b - 4 * a * c;  
    }

    void solve() const {
        if (discriminant > 0) {
            double x1 = (-b + sqrt(discriminant)) / (2 * a);
            double x2 = (-b - sqrt(discriminant)) / (2 * a);
            printf("Два корня: x1 = %.2f, x2 = %.2f\n", x1, x2);
        } else if (discriminant == 0) {
            double x = -b / (2 * a);
            printf("Один корень: x = %.2f\n", x);
        } else {
            double realPart = -b / (2 * a);
            double imaginaryPart = sqrt(-discriminant) / (2 * a);
            printf("Корней нет: x1 = %.2f + %.2fi, x2 = %.2f - %.2fi\n",
                   realPart, imaginaryPart, realPart, imaginaryPart);
        }
    }
};

int main() {
    double a, b, c;
    printf("Введите коэффициенты квадратного уравнения (a, b, c): ");
    scanf("%lf %lf %lf", &a, &b, &c); 

    try {
        QuadraticEquationSolver solver(a, b, c);
        solver.solve();
    } catch (const std::invalid_argument& e) {
        printf("Ошибка: %s\n", e.what());
    }

    return 0;
}
